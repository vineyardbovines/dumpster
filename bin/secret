#!/bin/bash

################
# ./bin/env
# add or change an environment variable across all necessary places
################

usage() {
    printf "Usage: $0 -e <environment> <key> <value>\nWhere environment is 'development', 'production', 'preview', or 'all'\n"
    exit 1
}

# check minimum number of arguments
if [ $# -ne 4 ]; then
    usage
fi

# Parse flag
while getopts "e:" flag; do
    case $flag in
        e) env=$OPTARG;;
        *) usage;;
    esac
done

# shift past the flag arguments to get to positional parameters
shift $((OPTIND-1))

# set positional parameters
KEY=$1
VALUE=$2

if [ -z "$env" ] || [ -z "$KEY" ] || [ -z "$VALUE" ]; then
    usage
fi

if ! command -v dotenvx; then
    printf "Installing dotenvx"
    curl -sfS https://dotenvx.sh | sudo sh 2>&1 > /dev/null
fi

set_var() {
    local file=$1
    FORMATTED_KEY=$(echo "$KEY" | \
        sed -E 's/[^a-zA-Z0-9]/_/g' | \
        sed -E 's/([a-z])([A-Z])/\1_\2/g' | \
        tr '[:lower:]' '[:upper:]' | \
        sed -E 's/_+/_/g' | \
        sed -E 's/^_+|_+$//g')
    printf "Setting and encrypting %s in $file"
    cd "$(dirname "$0")/../apps/mobile"
    bunx dotenvx set "$FORMATTED_KEY" "$VALUE" --force -f "$file"
    printf "Done! No further action required."
}

case "$env" in
    "all")
        set_var ".env.production"
        set_var ".env.preview"
        set_var ".env.local"
        ;;
    "production")
        set_var ".env.production"
        ;;
    "preview")
        set_var ".env.preview"
        ;;
    "local")
        set_var ".env.local"
        ;;
    *)
        usage
        ;;
esac
